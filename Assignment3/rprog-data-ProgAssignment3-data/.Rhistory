tail(plants)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6, ,4, replace = TRUE)
sample(1:6,4, replace = TRUE)
sample(1:20,10)
LETTERS
sample(LETTERS)
flips <- sample(c(0,1),100, prob = c(0.3, 0.7))
flips <- sample(c(0,1),100, replace = TRUE, prob = c(0.3, 0.7))
flips
sum(flips)
?rbinom
rbinom(1, size = 100, prob = 0.7)
flips2 <- rbinom(100, size = 100, prob = 0.7)
flips2 <- rbinom(100, size = 1, prob = 0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10,100,25)
?rpois
rpois(5,10)
my_pois <- replicate(100, rpois(5,10))
my_pois
cm <- colMeans(my_pois)
hist(cm)
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x = cars$speed, y = cars$dist)
plot(y = cars$speed, x = cars$dist)
?plot
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
?plot
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance", main = "My Plot")
plot(cars, main = "My Plot")
? plot
plot(cars, sub = "My Plot Subtitle")
plot(cars, col = 2)
plot(cars, xlim = (10,15))
plot(cars, xlim = c(10,15))
plot(cars, pch = 2)
data(mycars)
data(mtcars)
?boxplot
play()
mtcars
summary(mtcars
)
str(mtcars)
nxt()
boxplot(mtcars, formula = mpg ~ cyl )
boxplot(data = mtcars, formula = mpg ~ cyl )
boxplot(formula = mpg ~ cyl, data = mtcars)
hist(mtcars$mog)
hist(mtcars$mpg)
head(outcome)
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
setwd("~/Desktop/R/Assignment3/rprog-data-ProgAssignment3-data")
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
head(outcome)
ncol(outcome)
names(outcome)
outcome[, 11] <- as.numeric(outcome[, 11])
hist(outcome[, 11])
data <- read.csv("outcome-of-care-measures.csv")
names(data)
str(data)
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
str(data)
names(data)
cc = "STG"
data$stg
data$cc
cc = "TX"
data$cc
names(data)
data$State
data$State == "GA"
data$State == "FGH"
data$State == "FL"
sum(data$State == "FL")
sum(data$State == "FLs")
state = "FL"
sum(data$State == state)
state = "FLww"
sum(data$State == state)
names(data)
Deathrate <- as.numeric(data[, 11])
Deathrate <- as.numeric(na.omit(data[, 11]))
Deathrate
Deathrate <- as.numeric(na.omit(data[, 11]))
Deathrate <- na.omit(as.numeric(data[, 11]))
Deathrate
na.omit(data[, 11])
Deathrate <- na.omit(as.numeric(data[, 11]))
Deathrate
names(data)
which.min(data)
which.min(Deathrate)
index <- which.min(Deathrate)
index
data$Hospital.Name[index]
HospNames <- data$Hospital.Name[index]
HospNames
dd <- c("w","a","f")
sort(dd)
source("best.R")
> best("TX", "heart attack")
source("best.R")best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
c <- "heart attack"
c != "heart attack"
c != "heart attack" | c != "heart atack"
c != "heart attack" & c != "heart atack"
c != "heart attack" & c != "heart attack"
c != "heart attack" | c != "heart attack"
c != "heart attack" || c != "heart attack"
c != "heart attack" && c != "heart attack"
c != "heart attack"
c != "heart attak"
source("best.R")
best("TX", "heart attack")
c != "heart attack"
c
c != "heart attack"
c != "heart attac"
(c != "heart attac" || c != "heart attack")
(c != "heart attac" && c != "heart attack")
source("best.R")
best("TX", "heart attack")
best("MD", "heart attack")
source("best.R")
best("MD", "heart attack")
data
data[, 17]
data$State
data$Hospital.Name[index]
index
data$Hospital.Name == "GA"
data$Hospital.Name == c
data[data$Hospital.Name == "GA", 11]
data[data$Hospital.Name == "GA"]
data[data$Hospital.Name == "GAs"]
data[data$Hospital.Name == "FL"]
data$Hospital.Name == "FL"
data$Hospital.Name
data$State
data$State == "FL"
data[data$State == "FL"]
data$State
data$State == "FL"
data[data$State = "FL"]
data[data$State == "FL"]
d <- c(1, -1, 3, -2, 0, NaN, NA)
positives <- d[d>0 & !is.na(d)]
negatives <- d[d<0 & !is.na(d)]
positives
data[State == "FL"]
data[data$State = "FL"]
data[data$State = "FL",17]
data[data$State == "FL",17]
source("best.R")
best("MD", "heart attack")
best("TX", "heart attack")
data[data$State == "TX",11]
Deathrate <- as.numeric(data[, 11])
Deathrate
which.min(Deathrate)
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
Deathrate
dim(Deathrate)
length(Deathrate)
which.min(Deathrate)
Deathrate[2850]
Deathrate[2851]
Deathrate[2849]
source("best.R")
best("TX", "heart attack")
data[2850,]
Deathrate <- as.numeric(data[data$State == "TX", 23])
length(Deathrate)
data
names(data)
Names <- data[data$State == "TX", 2]
Names
source("best.R")
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "pneumonia")
best("BB", "pneumonia")
best("NY", "pddneumonia")
c(4,1,3,5)
sort(c(4,1,3,5))
sort(c(4,1,3,5),index.return=TRUE)
v<-c(3,1,5,4)
sort(v,index.return=TRUE)
v
sort(v,index.return=TRUE)$ix
v<-c(3,1,5,4,NA)
sort(v)
order(v)
v<-c(3,1,5,4,NA)
order(v)
order(v, is.na = TRUE)
order(v, na.last = NA )
v<-c(1,1,5,4,NA)
order(v, na.last = NA )
v<-c(2,1,5,4,NA)
c<-c("b","a","f","c", NA)
order(v, c, na.last = NA )
order( c, a, na.last = NA )
order( c, v, na.last = NA )
c<-c("b","a","f","z", NA)
order( c, v, na.last = NA )
order( v, c, na.last = NA )
c<-c("b","a","f","z", NA)
v<-c(1,1,5,4,NA)
order( v, c, na.last = NA )
c<-c("a","b","f","z", NA)
order( v, c, na.last = NA )
v
c
order( v, c, na.last = NA )
c<-c("b","a","f","z", NA)
order( v, c, na.last = NA )
?stop
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
3
source("rankhospital.R")
rankhospital("MD", "heart attack", "worst")
is.character(v)
source("rankhospital.R")
rankhospital("MD", "heart attack", "worst")
source("rankhospital.R")
rankhospital("MD", "heart attack", "worst")
rankhospital("MD", "heart attack", 5000)
Names <- data[, 2]
Names <- data$State
class(Names)
unique(Names)
unique(Names, incomparables = TRUE)
unique(Names, incomparables = FALSE)
unique(Names)
length(Names)
length(unique(Names))
f <- data.frame(hospital, state)
f <- data.frame()
f
f <- data.frame(hospital = "", state = "")
f
f[1,1] = "c"
f[,1] = "c"
f
f[,2] = "c"
f
f[2,2] = "c"
f
f[1,2] = "c"
f <- data.frame(hospital = "", state = "")
f[1,1] = "c"
f
f[1,2] = "c"
c
f
f[1,2] = "c"
f
f <- data.frame(hospital = "", state = "")
f
f <- data.frame(hospital = character(), state = character())
f
f[1,1] = "c"
f
f <- data.frame(hospital = character(), state = character())
f
f <- rbind(f,c("c","b"))
f
f <- rbind(f,c("a","w"))
f
f <- data.frame(hospital = " ", state = " ")
f
f[1,1] = "c"
f
f <- data.frame(hospital = "", state = "")
f
f[1,1]
names(f)
dim(f)
nrow(f)
ncol(f)
f <- data.frame(hospital = "", state = "")
ncol(f)
nrow(f)
f <- data.frame(hospital = "", state = "")
f[1,] = c("a,"b")
f[1,] <- c("a,"b")
f[1,] <- c("a","b")
f
f <- data.frame(hospital = "", state = "")
f[1,] <- list("a","b")
f[1,] = list("a","b")
list("a","b")
f[1,] = c("a","b")
f <- data.frame(hospital = "", state = "")
df <- list(hospital = "a", state = "b")
f = rbind(f,df)
f[1,] = list(hospital = "a", state = "b")
f <- data.frame(hospital = character(), state = character())
f[1,] = list(hospital = "a", state = "b")
f
f[1,] = list(hospital = "a", state = "b")
f <- data.frame(hospital = "FF", state = "BB")
f[1,] = list(hospital = "a", state = "b")
f
f <- data.frame(hospital = "FF", state = "BB")
f
f[1,1] = "a"
f
f[1,1] <- "a"
f
f[1,1] <- "a"
f
f[1,] = list(hospital = "a", state = "b")
f
f[1,1] <- "a"
f <- data.frame(hospital = "FF", state = "BB")f
f <- data.frame(hospital = "FF", state = "BB")
f[1,1]
f[1,2]
f$hospital[1] <- "b"
f
f$hospital[1]
class(f)
f
f$hospital[2]
f$hospital
df <- data.frame(hello=character(), goodbye=character(), volume=double())
de <- list(hello="hi", goodbye="bye", volume=3.0)
df = rbind(df,de, stringsAsFactors=FALSE)
de <- list(hello="hola", goodbye="ciao", volume=13.1)
df = rbind(df,de, stringsAsFactors=FALSE)
df
df <- data.frame(hello=character(), goodbye=character())
de <- list(hello="hi", goodbye="bye")
df = rbind(df,de, stringsAsFactors=FALSE)
de <- list(hello="hola", goodbye="ciao")
df = rbind(df,de, stringsAsFactors=FALSE)
de
df
df <- data.frame(hospital=character(), state=character())
de <- list(hospital="hi", state="bye")
df
df = rbind(df,de, stringsAsFactors=FALSE)
df
df = rbind(df,de)
df
df = rbind(df,de)
df
source("rankall.R")
head(rankall("heart attack", 20), 10)
head(rankall("heart attack", 2), 10)
source("rankall.R")
head(rankall("heart attack", 2), 10)
StateNames <- unique(data$State)
StateNames
length(StateNames)
StateNames[1]
data$State == StateNames[2]
str(data)
names(data)
rankall("heart attack", 1)
rankall("heart attack", 2)
rankall("heart attack", "best")
rankall("heart attack", 2)
rankall("heart atta", 2)
HospNames <- data[data$State == StateNames[2], 2]
HospNames
Deathrate <- as.numeric(data[data$State == StateNames[2], 11])
Deathrate
length(Deathrate)
Deathrate <- as.numeric(data[data$State == StateNames[1], 11])
length(Deathrate)
Deathrate <- as.numeric(data[data$State == StateNames[2], 11])
length(Deathrate)
source("rankall.R")
rankall("heart atta", 2)
rankall("heart attack", 2)
warnings()
source("rankall.R")
rankall("heart attack", 2)
rankall("heart attack", 20)
tail(rankall("heart attack", "worst"),3)
tail(rankall("pneumonia", "worst"),3)
tail(rankall("heart failure"),10)
warning()
warnings()
tail(rankall("heart failure"),10)
source("rankall.R")
rankall("heart attack", 20)
StateNames <- order(unique(data$State))
StateNames
sort(unique(data$State))
source("rankall.R")
tail(rankall("heart failure"),10)
tail(rankall("pneumonia", "worst"),3)
y <- c(1,4,3
)
table(y)
?table
y
x <- 9,6,10
x <- c(9,6,10)
x
table (x,y
)
z <- table (x,y)
class(z)
z
install_from_swirl("Getting and Cleaning Data")
install.packages("RMySQL")
library(XML)
install.packages("XML")
library(XML)
url <- "https://scholar.google.com/citations?user=pQvOxu0AAAAJ&hl=en"
html <- htmlTreeParse(url, useInternalNodes = T)
xpathSApply(html, "//title", xmlValue)
html <- htmlTreeParse(url, useInternalNodes = T)
html
url <- "https://scholar.google.com/citations?user=pQvOxu0AAAAJ&hl=en"
html <- htmlTreeParse(url, useInternalNodes=T)
url <- "https://scholar.google.com/citations?user=pQvOxu0AAAAJ&hl=en"
html <- htmlTreeParse(url, useInternalNodes=T)
library(xml2)
html <- htmlTreeParse(url, useInternalNodes=T)
html <- htmlTreeParse(url, useInternalNodes=TRUE)
install.packages("XML")
library(XML)
html <- htmlTreeParse(url, useInternalNodes=TRUE)
url <- "http://www.lacan.upc.edu/amir"
html <- htmlTreeParse(url, useInternalNodes=TRUE)
xpathSApply(html, "//title", xmlValue)
url <- "https://scholar.google.com/citations?user=pQvOxu0AAAAJ&hl=en"
library(httr)
html2 = GET(url)
content2 = content(html2, as ="text")
parsedHtml = htmlParse(content2, asText = TRUE)
xpathSApply(parsedHtml, "//title", xmlValue)
xpathSApply(parsedHtml, "//td[@id='col-citeby']", xmlValue)
xpathSApply(parsedHtml, "//td[@id='col-citedby']", xmlValue)
sample(1:5)
x<-data.frame(x = "")
x
x$y <- 1
x
x<-(1,1,2,3,3,3,4,5,6)
x<-c(1,1,2,3,3,3,4,5,6)
table(x)
rep(1:5, 54)
library(reshape2)
headm(mtcars)
head(mtcars)
rownames(mtcars)
mtcars$carname
mtcars$carname <-rownames(mtcars)
mtcars$carname
carMelt-<
dim(mtcars)
carMelt <- melt(mtcars,id=c("carname","gear","cyl"), measure.vars = c("mpg","hp"))
carmelt
carMelt
InsectSprays
spIns = split(InsectSprays$count,InspectSprays$spray)
InsectSprays
spIns = split(InsectSprays$count,InsectSprays$spray)
spIns
spIns$F
library(dplyr)
chicago <- readRDS("chicago.rds")
getwd()
chicago <- readRDS("chicago.rds")
names(chicago)
select(chicago, city:dptp)
df1 <- data.frame(id = sample(1:10),x=rnorm(10))
df2 <- data.frame(id = sample(1:10),x=rnorm(10))
df1
df2
join(df1,df2)
library(plyr)
join(df1,df2)
df1
join(df1,df2)
arrange(join(df1,df2),id)
df2 <- data.frame(id = sample(1:10),y=rnorm(10))
join(df1,df2)
df1
df1df2
df2
join(df1,df2)
